{"ast":null,"code":"import _objectSpread from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shirley/Desktop/nus-hack/dashboard/src/components/EmotionGraph.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nvar EmotionGraph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmotionGraph, _Component);\n\n  function EmotionGraph(props) {\n    var _this;\n\n    _classCallCheck(this, EmotionGraph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmotionGraph).call(this, props));\n    _this.state = {\n      chartData: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\n        datasets: [{\n          label: \"Percentage\",\n          data: [0, 10, 25, 43, 52, 82, 60, 88, 34, 23, 54],\n          backgroundColor: _this.props.color\n        }]\n      },\n      graphTime: 0\n    };\n    return _this;\n  }\n\n  _createClass(EmotionGraph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        console.log(_this2.state.chartData.datasets[0].data[_this2.state.graphTime]);\n\n        var dataProperty = _objectSpread({}, _this2.state.chartData.datasets[0].data[_this2.state.graphTime]);\n\n        dataProperty = 1;\n\n        _this2.setState({\n          graphTime: _this2.props.currentTime\n        });\n\n        _this2.setState({\n          dataProperty: dataProperty\n        });\n\n        console.log(_this2.state.chartData.datasets[0].data[_this2.state.graphTime]);\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.state.chartData,\n        options: {\n          title: {\n            display: true,\n            text: this.props.emotion,\n            fontSize: 25\n          },\n          legend: {\n            display: true,\n            position: \"top\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EmotionGraph;\n}(Component);\n\nexport default EmotionGraph;","map":{"version":3,"sources":["/Users/shirley/Desktop/nus-hack/dashboard/src/components/EmotionGraph.js"],"names":["React","Component","Line","EmotionGraph","props","state","chartData","labels","datasets","label","data","backgroundColor","color","graphTime","interval","setInterval","console","log","dataProperty","setState","currentTime","title","display","text","emotion","fontSize","legend","position"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,IAA9C,CADC;AAETC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEC,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,CAFR;AAGEC,UAAAA,eAAe,EAAE,MAAKP,KAAL,CAAWQ;AAH9B,SADQ;AAFD,OADA;AAWXC,MAAAA,SAAS,EAAE;AAXA,KAAb;AAHiB;AAgBlB;;;;wCAEmB;AAAA;;AAClB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChCC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,KAAL,CAAWC,SAAX,CAAqBE,QAArB,CAA8B,CAA9B,EAAiCE,IAAjC,CAAsC,MAAI,CAACL,KAAL,CAAWQ,SAAjD,CAAZ;;AACA,YAAIK,YAAY,qBACX,MAAI,CAACb,KAAL,CAAWC,SAAX,CAAqBE,QAArB,CAA8B,CAA9B,EAAiCE,IAAjC,CAAsC,MAAI,CAACL,KAAL,CAAWQ,SAAjD,CADW,CAAhB;;AAGAK,QAAAA,YAAY,GAAG,CAAf;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACZN,UAAAA,SAAS,EAAE,MAAI,CAACT,KAAL,CAAWgB;AADV,SAAd;;AAGA,QAAA,MAAI,CAACD,QAAL,CAAc;AAAED,UAAAA,YAAY,EAAZA;AAAF,SAAd;;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,KAAL,CAAWC,SAAX,CAAqBE,QAArB,CAA8B,CAA9B,EAAiCE,IAAjC,CAAsC,MAAI,CAACL,KAAL,CAAWQ,SAAjD,CAAZ;AACD,OAX0B,EAWxB,IAXwB,CAA3B;AAYD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,SADnB;AAEE,QAAA,OAAO,EAAE;AACPe,UAAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,IADJ;AAELC,YAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWoB,OAFZ;AAGLC,YAAAA,QAAQ,EAAE;AAHL,WADA;AAOPC,UAAAA,MAAM,EAAE;AACNJ,YAAAA,OAAO,EAAE,IADH;AAENK,YAAAA,QAAQ,EAAE;AAFJ;AAPD,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAmBD;;;;EAtDwB1B,S;;AAyD3B,eAAeE,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass EmotionGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\n        datasets: [\n          {\n            label: \"Percentage\",\n            data: [0, 10, 25, 43, 52, 82, 60, 88, 34, 23, 54],\n            backgroundColor: this.props.color\n          }\n        ]\n      },\n      graphTime: 0\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      console.log(this.state.chartData.datasets[0].data[this.state.graphTime]);\n      var dataProperty = {\n        ...this.state.chartData.datasets[0].data[this.state.graphTime]\n      };\n      dataProperty = 1;\n      this.setState({\n        graphTime: this.props.currentTime\n      });\n      this.setState({ dataProperty });\n      console.log(this.state.chartData.datasets[0].data[this.state.graphTime]);\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"chart\">\n        <Line\n          data={this.state.chartData}\n          options={{\n            title: {\n              display: true,\n              text: this.props.emotion,\n              fontSize: 25\n            },\n\n            legend: {\n              display: true,\n              position: \"top\"\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EmotionGraph;\n"]},"metadata":{},"sourceType":"module"}