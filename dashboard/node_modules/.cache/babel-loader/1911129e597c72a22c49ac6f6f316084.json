{"ast":null,"code":"import _defineProperty from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shirley/Desktop/nus-hack/dashboard/src/components/ChangeEmotionButton.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing.unit * 2\n    }\n  };\n};\n\nvar ChangeEmotionButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeEmotionButton, _Component);\n\n  function ChangeEmotionButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChangeEmotionButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChangeEmotionButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      emotion: \"\",\n      name: \"hai\",\n      labelWidth: 0\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      switch (event.target.value) {\n        case 10:\n          _this.props.emotionHandler(\"Happiness\");\n\n          break;\n\n        case 20:\n          _this.props.emotionHandler(\"Anger\");\n\n          break;\n\n        case 30:\n          _this.props.emotionHandler(\"Surprise\");\n\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ChangeEmotionButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"form\", {\n        className: classes.root,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        ref: function ref(_ref) {\n          _this2.InputLabelRef = _ref;\n        },\n        htmlFor: \"outlined-emotion-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Emotion\"), React.createElement(Select, {\n        value: this.state.emotion,\n        onChange: this.handleChange,\n        input: React.createElement(OutlinedInput, {\n          labelWidth: this.state.labelWidth,\n          name: \"emotion\",\n          id: \"outlined-emotion-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: 10,\n        text: \"Happiness\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Happiness\"), React.createElement(MenuItem, {\n        value: 20,\n        text: \"Anger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Anger\"), React.createElement(MenuItem, {\n        value: 30,\n        text: \"Surprise\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Surprise\"))));\n    }\n  }]);\n\n  return ChangeEmotionButton;\n}(Component);\n\nChangeEmotionButton.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ChangeEmotionButton);","map":{"version":3,"sources":["/Users/shirley/Desktop/nus-hack/dashboard/src/components/ChangeEmotionButton.js"],"names":["React","Component","ReactDOM","PropTypes","withStyles","OutlinedInput","InputLabel","MenuItem","FormControl","Select","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","ChangeEmotionButton","state","emotion","name","labelWidth","handleChange","event","setState","target","value","props","emotionHandler","findDOMNode","InputLabelRef","offsetWidth","classes","ref","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nclass ChangeEmotionButton extends Component {\n  state = {\n    emotion: \"\",\n    name: \"hai\",\n    labelWidth: 0\n  };\n\n  componentDidMount() {\n    this.setState({\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth\n    });\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    switch (event.target.value) {\n      case 10:\n        this.props.emotionHandler(\"Happiness\");\n        break;\n      case 20:\n        this.props.emotionHandler(\"Anger\");\n        break;\n      case 30:\n        this.props.emotionHandler(\"Surprise\");\n        break;\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.root} autoComplete=\"off\">\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel\n            ref={ref => {\n              this.InputLabelRef = ref;\n            }}\n            htmlFor=\"outlined-emotion-simple\"\n          >\n            Emotion\n          </InputLabel>\n          <Select\n            value={this.state.emotion}\n            onChange={this.handleChange}\n            input={\n              <OutlinedInput\n                labelWidth={this.state.labelWidth}\n                name=\"emotion\"\n                id=\"outlined-emotion-simple\"\n              />\n            }\n          >\n            <MenuItem value={10} text=\"Happiness\">\n              Happiness\n            </MenuItem>\n            <MenuItem value={20} text=\"Anger\">\n              Anger\n            </MenuItem>\n            <MenuItem value={30} text=\"Surprise\">\n              Surprise\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\nChangeEmotionButton.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ChangeEmotionButton);\n"]},"metadata":{},"sourceType":"module"}