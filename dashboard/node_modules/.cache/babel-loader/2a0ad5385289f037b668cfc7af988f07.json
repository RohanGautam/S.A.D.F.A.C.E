{"ast":null,"code":"import _classCallCheck from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shirley/Desktop/nus-hack/dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shirley/Desktop/nus-hack/dashboard/src/components/EmotionGraph.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nvar EmotionGraph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmotionGraph, _Component);\n\n  function EmotionGraph(props) {\n    var _this;\n\n    _classCallCheck(this, EmotionGraph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmotionGraph).call(this, props));\n    _this.state = {\n      chartData: {\n        labels: [\"0:10\", \"0:20\", \"0:30\", \"0:40\", \"0:50\", \"0:60\"],\n        datasets: [{\n          label: \"Percentage\",\n          data: [10, 25, 43, 52, 82, 60],\n          //backgroundColor:'green',\n          backgroundColor: _this.props.color\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(EmotionGraph, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.state.chartData,\n        options: {\n          title: {\n            display: true,\n            text: this.props.emotion,\n            fontSize: 25\n          },\n          legend: {\n            display: true,\n            position: \"top\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EmotionGraph;\n}(Component);\n\nexport default EmotionGraph;","map":{"version":3,"sources":["/Users/shirley/Desktop/nus-hack/dashboard/src/components/EmotionGraph.js"],"names":["React","Component","Line","EmotionGraph","props","state","chartData","labels","datasets","label","data","backgroundColor","color","title","display","text","emotion","fontSize","legend","position"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,CADC;AAETC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEC,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAFR;AAGE;AACAC,UAAAA,eAAe,EAAE,MAAKP,KAAL,CAAWQ;AAJ9B,SADQ;AAFD;AADA,KAAb;AAHiB;AAgBlB;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,SADnB;AAEE,QAAA,OAAO,EAAE;AACPO,UAAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,IADJ;AAELC,YAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,OAFZ;AAGLC,YAAAA,QAAQ,EAAE;AAHL,WADA;AAOPC,UAAAA,MAAM,EAAE;AACNJ,YAAAA,OAAO,EAAE,IADH;AAENK,YAAAA,QAAQ,EAAE;AAFJ;AAPD,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAmBD;;;;EAvCwBlB,S;;AA0C3B,eAAeE,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass EmotionGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: {\n        labels: [\"0:10\", \"0:20\", \"0:30\", \"0:40\", \"0:50\", \"0:60\"],\n        datasets: [\n          {\n            label: \"Percentage\",\n            data: [10, 25, 43, 52, 82, 60],\n            //backgroundColor:'green',\n            backgroundColor: this.props.color\n          }\n        ]\n      }\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"chart\">\n        <Line\n          data={this.state.chartData}\n          options={{\n            title: {\n              display: true,\n              text: this.props.emotion,\n              fontSize: 25\n            },\n\n            legend: {\n              display: true,\n              position: \"top\"\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EmotionGraph;\n"]},"metadata":{},"sourceType":"module"}